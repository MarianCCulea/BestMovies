@page "/"
@using BestMovies.Model.Domain
@using System.ComponentModel.DataAnnotations;
@inject IDataLayer DataLayer

<h2>View Movies here</h2>

<div class="text-center bg-blue-100">
    <input class="border-4 w-1/3 rounded m-6 p-6 h-8 border-blue-300" @bind-value="SearchTerm" @bind-value:event="oninput"
           placeholder="Search by title (must contain at least 3 letters)" />
    <button type="button" class="btn btn-info" @onclick=SearchForMovie>Search</button>
    <br>

    @if (items == null || !items.Any())
    {
        <p>Nothing to see here</p>
    }
    else
    {
        <table class="table" style="width:300px">
            <tbody>
                @for (var z = 0; z < items.Count; z++)
                {
                    @if (z % 5 == 0)
                    {
                        <tr>
                        </tr>
                    }
                <td width="55%">
                    @items[z].rating.rating/10 ★
                </td>
                <td width="33%"><a href=@($"/movie/{items[z].id}") asp-route-id="@items[z].id">@items[z].title</a>
            </td>
            }
                </tbody>
            </table>
        }

</div>
@code {

    [StringLength(30, MinimumLength = 3, ErrorMessage = "Minimum 3 characters")]
    string SearchTerm { get; set; } = "";

    private IList<Movie> items
    { get; set; }
    protected override async Task OnInitializedAsync()
    {
        IList<Movie> unordered = await DataLayer.RequestAllItems();
        items = unordered.ToList();
    }

    async Task SearchForMovie()
    {
        IList<Movie> searched = await DataLayer.ItemByName(SearchTerm);
        items = searched.ToList();
    }

}